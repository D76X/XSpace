trigger:
  branches:
    include:
    - master
variables:
- name: azureSubscription
  value: '291fa2ef-a503-4f7b-8e3b-67ca3095f955'
- name: functionAppName
  value: 'fa-ntt-fa1ws1'
- name: vmImageName
  value: 'vs2017-win2016'
- name: workingDirectory
  value: 'WebSite1'
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/$(functionAppsDirectory)/*/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - task: ecdc45f6-832d-4ad9-b52b-ee49e94659be@1
      inputs:
        path: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifactName: drop
- stage: Deploy
  displayName: Deploy stage
  dependsOn:
  - Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment:
      name: 'development'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'

