# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
 batch: true
 branches:
   include:
    - master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'dbda27e8-8866-4877-9338-9f5bcde919c3'

  # Function app name
  functionAppName: 'fa-ntt-fa1ws1'

  # Agent VM image name
  vmImageName: 'vs2017-win2016'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/WebSite1/FunctionApps/fa1ws1'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build           
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: PowerShell@2
      env: 
          AZCOPY_SPA_CLIENT_SECRET: $(AZCOPY_SPA_CLIENT_SECRET)  
      inputs:
        displayName: 'Synch static files to blob container'
        targetType: 'filePath'
        filePath: $(System.DefaultWorkingDirectory)\Website1\006_pipeline_fa1_sync.ps1                

    # Keep this task here until the community updates it to perform a synch instead of a copy    
    # - task: AzureFileCopy@4
    #   displayName: 'Copy static files to blob container' 
    #   inputs:            
    #     SourcePath: '$(Build.SourcesDirectory)/WebSite1/Contents/*'                            
    #     azureSubscription: '$(azureSubscription)'
    #     Destination: 'AzureBlob'
    #     storage: 'sawebsite120201221'
    #     ContainerName: '$web'         

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'